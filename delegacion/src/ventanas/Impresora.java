/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.Impresoras;
import modelo.Render;
import modelo.Repuestos;

/**
 *
 * @author bcastrof
 */
public class Impresora extends javax.swing.JFrame {

    private DefaultTableModel prints;
    private TableRowSorter<TableModel> modeloOrdenado;
    private List<Impresoras> impresoras;
    private Impresoras impresora;
    private DefaultTableModel repus;
    private List<Repuestos> repuestos;

    public Impresora() {
        initComponents();
        listarImpresoras();
        listarTodosLosRepuestos();
        autoCompletado();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        ubicacion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tImpresoras = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        filtro = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        modelo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        filtrar = new javax.swing.JButton();
        ej = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        marca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        descripcion = new java.awt.TextArea();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        eRegistros = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("IMPRESORAS");

        ubicacion.setPreferredSize(new java.awt.Dimension(150, 27));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ej, org.jdesktop.beansbinding.ObjectProperty.create(), ubicacion, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jLabel7.setText("DESCRIPCION");

        tImpresoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EJ", "MARCA", "MODELO", "e", "m"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tImpresoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tImpresorasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tImpresorasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tImpresoras);
        if (tImpresoras.getColumnModel().getColumnCount() > 0) {
            tImpresoras.getColumnModel().getColumn(0).setResizable(false);
            tImpresoras.getColumnModel().getColumn(1).setResizable(false);
            tImpresoras.getColumnModel().getColumn(2).setResizable(false);
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REF. REPUESTO", "CANTIDAD"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setText("ALTA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        modelo.setPreferredSize(new java.awt.Dimension(150, 27));

        jLabel3.setText("MARCA");

        filtrar.setText("FILTRAR");
        filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarActionPerformed(evt);
            }
        });

        ej.setPreferredSize(new java.awt.Dimension(150, 27));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, marca, org.jdesktop.beansbinding.ObjectProperty.create(), ej, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jButton3.setText("BORRAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("TIPO");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LOCAL", "SERVIDOR" }));

        marca.setPreferredSize(new java.awt.Dimension(150, 27));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, modelo, org.jdesktop.beansbinding.ObjectProperty.create(), marca, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jLabel2.setText("EJ");

        jLabel6.setText("UBICACION");

        jButton4.setText("LIMPIAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setText("EDITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("FILTRO");

        jLabel4.setText("MODELO");

        jLabel1.setText("NÂº IMPRESORAS:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(42, 42, 42)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(299, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGap(53, 53, 53)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(67, 67, 67)
                            .addComponent(descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)
                                            .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel7)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ej, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(67, 67, 67)
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(84, 84, 84)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(filtrar)))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(eRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(ej, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(49, 49, 49)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jButton4)
                        .addComponent(jButton3)
                        .addComponent(jButton2)
                        .addComponent(jButton1))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filtrar))
                    .addContainerGap(42, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tImpresorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tImpresorasMouseClicked
        prints = (DefaultTableModel) tImpresoras.getModel();
        repus = (DefaultTableModel) jTable1.getModel();

        int column = tImpresoras.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tImpresoras.getRowHeight();
        int index = tImpresoras.getSelectedRow();

        ubicacion.setText(impresoras.get(index).getUbicacion());
        ej.setText(impresoras.get(index).getEj());
        marca.setText(impresoras.get(index).getMarca());
        modelo.setText(impresoras.get(index).getModelo());
        descripcion.setText(impresoras.get(index).getDescripcion());
        jComboBox1.setSelectedItem(impresoras.get(index).getTipo());
        listarRepuestosImpresora(ej.getText());
        
        if (row < tImpresoras.getRowCount() && row >= 0 && column < tImpresoras.getColumnCount() && column >= 0) {
            Object value = tImpresoras.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getName().equals("m")) {
                    System.out.println("Click en el boton modificar");
                    //EVENTOS MODIFICAR
                }
                if (boton.getName().equals("e")) {
                    Impresoras i = new Impresoras(ej.getText());
                    //i.setEj(ej.getText()); si lo quiero borrar sin crear un constructor nuevo.
                    if (JOptionPane.showConfirmDialog(null, "Esta seguro de borrar la impresora " + i.getEj() + "?", "Confirmar",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        if (i.borrarImpresora(i.getEj()) == true) {
                            JOptionPane.showMessageDialog(null, "Impresora dada de baja.", "BAJA", JOptionPane.INFORMATION_MESSAGE);
                            limpiar();
                        } else {
                            JOptionPane.showMessageDialog(null, "Baja impresora fallida.", "ATENCIÃN", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                   
                    //EVENTOS ELIMINAR
                }
            }
        }


    }//GEN-LAST:event_tImpresorasMouseClicked

    private void filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarActionPerformed
        recuperarImpresora(filtro.getText().toUpperCase());
    }//GEN-LAST:event_filtrarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        limpiar();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Impresoras i = new Impresoras(ej.getText());
        //i.setEj(ej.getText()); si lo quiero borrar sin crear un constructor nuevo.
        if (JOptionPane.showConfirmDialog(null, "Esta seguro de borrar la impresora " + i.getEj() + "?", "Confirmar",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            if (i.borrarImpresora(i.getEj()) == true) {
                JOptionPane.showMessageDialog(null, "Impresora dada de baja.", "BAJA", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Baja impresora fallida.", "ATENCIÃN", JOptionPane.WARNING_MESSAGE);
            }
        }
        limpiar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        prints = (DefaultTableModel) tImpresoras.getModel();
        repus = (DefaultTableModel) jTable1.getModel();

        int index = tImpresoras.getSelectedRow();
        int index1 = jTable1.getSelectedRow();

        Impresoras i = new Impresoras(ej.getText(),
                marca.getText(),
                modelo.getText(),
                jComboBox1.getSelectedItem().toString(),
                ubicacion.getText(),
                descripcion.getText());

        //Repuestos r = new Repuestos(Integer.parseInt(jTable1.getValueAt(index1, 0).toString()));
        Repuestos r = new Repuestos(Integer.parseInt(jTable1.getValueAt(index1, 1).toString()), jTable1.getValueAt(index1, 0).toString());
        // r.setCantidad(Integer.parseInt(jTable1.getValueAt(index1, 1).toString()));
        //  r.setCd_repuesto(jTable1.getValueAt(index1, 0).toString());
        if (i.editarImpresora(ej.getText()) && r.modificarRepuestoImpresora(r.getCd_repuesto()) == true) {
            JOptionPane.showMessageDialog(null, "Registro Modificado");
            limpiar();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Impresoras i = new Impresoras(ej.getText().toUpperCase(),
                marca.getText().toUpperCase(),
                modelo.getText().toUpperCase(),
                jComboBox1.getSelectedItem().toString(),
                ubicacion.getText().toUpperCase(),
                descripcion.getText().toUpperCase());
        String referencia = ej.getText().toUpperCase();
        if (i.altaImpresora() != true) {
            JOptionPane.showMessageDialog(null, "No se puede dar de alta la impresora:\nverifique los datos.");
        } else {

            while (JOptionPane.showConfirmDialog(null, "Vas aÃ±adir repuestos para esta impresora " + i.getEj() + "?", "Confirmar",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                String cd_repuesto = JOptionPane.showInputDialog(null, "Escriba referencia del repuesto:", "Asociar repuesto",
                        JOptionPane.NO_OPTION);
                if (cd_repuesto == null) {
                    JOptionPane.showMessageDialog(null, "No se han aÃ±adido repuestos");
                    limpiar();
                } else {
                    Impresoras i2 = new Impresoras(cd_repuesto.toUpperCase(), referencia);
                    if (!i2.altaTienen().equalsIgnoreCase("ok")) {
                        String mensaje = i2.altaTienen();
                        JOptionPane.showMessageDialog(null, "no se ha podido aÃ±adir el repuesto\n" + mensaje);
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Impresora dada de alta");
            limpiar();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tImpresorasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tImpresorasMousePressed
        //listarRepuestos(ej.getText());
    }//GEN-LAST:event_tImpresorasMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Impresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Impresora().setVisible(true);
            }
        });
    }

    private void listarImpresoras() {
        prints = (DefaultTableModel) tImpresoras.getModel();
        impresoras = Impresoras.listarImpresoras();
        tImpresoras.setDefaultRenderer(Object.class, new Render());

        JButton btn1 = new JButton("Modificar");
        btn1.setName("m");
        JButton btn2 = new JButton();
        btn2.setName("e");
        btn2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.white));
        btn2.setToolTipText("ALTA");
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Save-icon.png")));
        impresoras.forEach((i) -> {

            prints.insertRow(prints.getRowCount(), new Object[]{
                i.getEj(), i.getMarca(), i.getModelo(), btn1,btn2

            });
            modeloOrdenado = new TableRowSorter<>(prints);
            tImpresoras.setRowSorter(modeloOrdenado);
            int t = impresoras.size();
            eRegistros.setText(Integer.toString(t));
        });

    }

    private void recuperarImpresora(String eji) {
        prints.setRowCount(0);
        prints = (DefaultTableModel) tImpresoras.getModel();
        impresora = Impresoras.recuperarImpresora(eji);

        prints.insertRow(prints.getRowCount(), new Object[]{
            impresora.getEj(), impresora.getMarca(), impresora.getModelo()
        });
        impresoras.clear();
        impresoras.add(impresora);
        int t = impresoras.size();
        eRegistros.setText(Integer.toString(t));
    }

    private void listarTodosLosRepuestos() {
        repus = (DefaultTableModel) jTable1.getModel();
        repuestos = Repuestos.todosLosRepuestos();

        repuestos.forEach((r) -> {
            repus.insertRow(repus.getRowCount(), new Object[]{
                r.getCd_repuesto(), r.getCantidad()
            });
        });
    }

    private void listarRepuestosImpresora(String iRef) {
        repus = (DefaultTableModel) jTable1.getModel();
        repuestos = Repuestos.listarRepuestosImpresora(iRef);
        if (repus.getRowCount() > 0) {
            repus.setRowCount(0);
            repuestos.clear();
            repuestos = Repuestos.listarRepuestosImpresora(iRef);
            repuestos.forEach((r) -> {
                repus.insertRow(repus.getRowCount(), new Object[]{
                    r.getCd_repuesto(), r.getCantidad()
                });
            });
        }
    }

    private void autoCompletado() {

        Impresoras.autoCompletarImpresora(filtro);

    }

    private void limpiar() {
        String t = "";
        descripcion.setText(t);
        ej.setText(t);
        filtro.setText(t);
        marca.setText(t);
        modelo.setText(t);
        ubicacion.setText(t);

        jComboBox1.setSelectedIndex(0);
        prints.setRowCount(0);
        repus.setRowCount(0);
        listarImpresoras();
        listarTodosLosRepuestos();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea descripcion;
    private javax.swing.JLabel eRegistros;
    private javax.swing.JTextField ej;
    private javax.swing.JButton filtrar;
    private javax.swing.JTextField filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField marca;
    private javax.swing.JTextField modelo;
    private javax.swing.JTable tImpresoras;
    private javax.swing.JTextField ubicacion;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
